name: Full Test

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  ubuntu:
    runs-on: ${{ matrix.compiler.os }}
    strategy:
      fail-fast: false
      matrix:
        boost_version:
          - 1.80.0
          - 1.81.0
          - 1.82.0
          - 1.83.0
          - 1.84.0
        compiler:
          - cc: clang
            cxx: clang++
            ver: 15
            os: ubuntu-22.04
          - cc: clang
            cxx: clang++
            ver: 16
            os: ubuntu-22.04
          - cc: clang
            cxx: clang++
            ver: 17
            os: ubuntu-24.04
          - cc: gcc
            cxx: g++
            ver: 11
            os: ubuntu-22.04
          - cc: gcc
            cxx: g++
            ver: 12
            os: ubuntu-24.04
          - cc: gcc
            cxx: g++
            ver: 13
            os: ubuntu-24.04
    env:
      CC: ${{ matrix.compiler.cc }}-${{ matrix.compiler.ver }}
      CXX: ${{ matrix.compiler.cxx }}-${{ matrix.compiler.ver }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install CMake & fmt
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y -qq pkg-config cmake

      - name: Install Clang
        if: startsWith(matrix.compiler.cxx, 'clang')
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          sudo ./llvm.sh ${{ matrix.compiler.ver }}

      - name: Install fmt
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install fmt

      - name: Restore & Cache boost (${{ matrix.boost_version }})
        uses: actions/cache@v4
        id: boost-cache
        with:
          path: ${{ runner.temp }}/libs/boost
          key: ${{ env.CXX }}-boost-${{ matrix.boost_version }}
      - name: Install boost (${{ matrix.boost_version }}) as static
        if: steps.boost-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ runner.temp }}/libs/boost
          git clone -q -b boost-${{ matrix.boost_version }} --recursive https://github.com/boostorg/boost.git
          cd boost
          ./bootstrap.sh
          sudo ./b2 link=static install -j4 --prefix=${{ runner.temp }}/libs/boost || exit 0
        working-directory: ${{ runner.temp }}

      - name: Build and test
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          mkdir build && cd build
          cmake ..             \
            -DBUILD_TESTING=ON \
            -DBoost_USE_STATIC_LIBS=ON \
            -DBOOST_ROOT=${{ runner.temp }}/libs/boost
          make
          make test

  macos:
    runs-on: macos-${{ matrix.osver }}
    strategy:
      fail-fast: false
      matrix:
        osver: [13, 14, 15]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install CMake, Boost, & fmt
        run: brew install pkg-config cmake boost fmt

      - name: Build and test
        run: |
          mkdir build && cd build
          cmake ..             \
            -DBUILD_TESTING=ON \
            -DBoost_USE_STATIC_LIBS=OFF \
            -DBOOST_ROOT=${{ runner.temp }}/libs/boost
          make
          make test
