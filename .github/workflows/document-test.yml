name: Document Test

on:
  push:
    paths:
      - 'include/**'
      - 'docs/**'
    branches: [ develop, master, 'feature/*' ]
  pull_request:
    branches: [ develop, master ]

env:
  BOOST_VERSION: 1.75.0
  FMT_VERSION: 7.1.3

jobs:
  doc_test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - {
            name: "Latest Version of GCC 10.x",
            cc: "gcc-10", cxx: "g++-10",
          }
          - {
            name: "Latest Version of Clang 10.x",
            cc: "clang-10", cxx: "clang++-10",
          }
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
    steps:
      - uses: actions/checkout@v2.3.4
      - run: git submodule update --init --recursive
      - run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - run: sudo apt-get -qq update
      - name: Install ${{ matrix.config.cc }}
        run: sudo apt-get install -y -qq pkg-config cmake ${{ matrix.config.cc }}

      - name: Clang Version
        run: ${{ matrix.config.cxx }} --version

      - name: Restore & Cache {fmt}
        uses: actions/cache@v2.1.6
        id: fmt-cache
        with:
          path: ${{ runner.temp }}/libs/fmt
          key: ${{ matrix.config.name }}-fmt-${{ env.FMT_VERSION }}
      - name: Install fmt
        if: steps.fmt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ runner.temp }}/libs/fmt
          git clone -q -b ${{ env.FMT_VERSION }} --recursive https://github.com/fmtlib/fmt.git
          cd fmt
          mkdir build && cd build
          cmake -DBUILD_SHARED_LIBS=TRUE -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}/libs/fmt ..
          make -j4 && sudo make install || exit 0
        working-directory: ${{ runner.temp }}

      - name: Restore & Cache boost (${{ env.BOOST_VERSION }})
        uses: actions/cache@v2.1.6
        id: boost-cache
        with:
          path: ${{ runner.temp }}/libs/boost
          key: ${{ matrix.config.name }}-boost-${{ env.BOOST_VERSION }}
      - name: Install boost (${{ env.BOOST_VERSION }}) as static
        if: steps.boost-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ runner.temp }}/libs/boost
          git clone -q -b boost-${{ env.BOOST_VERSION }} --recursive https://github.com/boostorg/boost.git
          cd boost
          ./bootstrap.sh
          sudo ./b2 link=static install -j2 --prefix=${{ runner.temp }}/libs/boost || exit 0
        working-directory: ${{ runner.temp }}

      - name: Document test
        run: |
          cd docs
          curl -s https://api.github.com/repos/LoliGothick/mkdocs-smoke-test/releases \
            | jq -r '.[0].assets[] | select(.name | test("x86_64-unknown-linux-musl.zip")) | .browser_download_url' \
            | xargs -n1 curl -LOk
          unzip x86_64-unknown-linux-musl.zip
          sed -i 's#__COMPILER__#${{ matrix.config.cxx }}#g' config.toml
          sed -i 's#__BOOST_ROOT__#${{ runner.temp }}/libs/boost#g' config.toml
          sed -i 's#__LIBFMT_SO__#${{ runner.temp }}/libs/fmt/lib/libfmt.so#g' config.toml
          sed -i 's#__FMT_INCLUDE_DIR__#${{ runner.temp }}/libs/fmt/include#g' config.toml
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${{ runner.temp }}/libs/fmt/lib/
          x86_64-unknown-linux-musl/release/mkdocs-smoke-test --directory=docs --config=./config.toml
