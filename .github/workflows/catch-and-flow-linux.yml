name: Catch and Flow for Linux

on:
  push:
    paths:
      - 'include/**'
      - 'test/**'
    branches: [ 'feature/*' ]
  pull_request:
    branches: [ develop ]

env:
  BOOST_VERSION: 1.75.0

jobs:
  catch_and_flow:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        config:
          - {
            name: "Latest Version of GCC 8.x",
            cc: "gcc", cxx: "g++",
          }
          - {
            name: "Latest Version of GCC 9.x",
            cc: "gcc-9", cxx: "g++-9",
          }
          - {
            name: "Latest Version of GCC 10.x",
            cc: "gcc-10", cxx: "g++-10",
          }
          - {
            name: "Latest Version of Clang 7.x",
            cc: "clang-7", cxx: "clang++-7",
          }
          - {
            name: "Latest Version of Clang 8.x",
            cc: "clang-8", cxx: "clang++-8",
          }
          - {
            name: "Latest Version of Clang 9.x",
            cc: "clang-9", cxx: "clang++-9",
          }
          - {
            name: "Latest Version of Clang 10.x",
            cc: "clang-10", cxx: "clang++-10",
          }
    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}
    steps:
      - uses: actions/checkout@v2.3.4
      - run: git submodule update --init --recursive
      - run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install ${{ matrix.config.cc }}
        run: |
          sudo add-apt-repository universe
          sudo apt-get -qq update
          sudo apt-get install -y -qq pkg-config cmake libfmt-dev ${{ matrix.config.cc }}

      - name: Clang Version
        run: ${{ matrix.config.cxx }} --version

      - name: Restore & Cache boost (${{ env.BOOST_VERSION }})
        uses: actions/cache@v2.1.6
        id: boost-cache
        with:
          path: ${{ runner.temp }}/libs/boost
          key: ${{ matrix.config.name }}-boost-${{ env.BOOST_VERSION }}
      - name: Install boost (${{ env.BOOST_VERSION }}) as static
        if: steps.boost-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ runner.temp }}/libs/boost
          git clone -q -b boost-${{ env.BOOST_VERSION }} --recursive https://github.com/boostorg/boost.git
          cd boost
          ./bootstrap.sh
          sudo ./b2 link=static install -j2 --prefix=${{ runner.temp }}/libs/boost || exit 0
        working-directory: ${{ runner.temp }}

      - name: Build and test
        run: |
          mkdir build && cd build
          cmake ..             \
            -DBUILD_TESTING=ON \
            -DBoost_USE_STATIC_LIBS=ON \
            -DBOOST_ROOT=${{ runner.temp }}/libs/boost
          make
          make test
